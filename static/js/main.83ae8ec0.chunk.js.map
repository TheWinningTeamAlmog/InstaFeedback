{"version":3,"sources":["App.js","serviceWorker.js","index.js","instagram-logo-black.png"],"names":["avatars","title","react_default","a","createElement","style","marginTop","cursor","onClick","window","location","alt","src","logo","width","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","usernameChanged","asyncToGenerator","regenerator_default","mark","_callee","username","resp","pageHtml","imagesRegexMatch","recheckUsername","profilePicString","profilePic","wrap","_context","prev","next","setState","isLoading","document","getElementById","value","fetch","concat","sent","ok","trim","mainImage","usernameError","abrupt","text","match","Array","isArray","length","slice","stop","readFile","file","files","reader","FileReader","addEventListener","uploadedImageB64","result","readAsDataURL","submit","_callee2","respJson","_context2","loadingAPI","method","headers","Content-Type","body","JSON","stringify","fileBase64","state","split","join","user","json","comments","likes","tags","_this2","Number","isInteger","sort","Math","random","map","t","replace","href","target","rel","className","maxHeight","maxWidth","innerWidth","marginBottom","Comment","Group","textAlign","Header","as","Menu","compact","Item","Icon","name","Label","color","floating","abbreviate","Avatar","toLowerCase","Content","Author","Metadata","Text","img","height","borderRadius","onLoad","Form","autoComplete","Input","error","id","loading","placeholder","onChange","basic","htmlFor","Button","icon","label","content","labelPosition","hidden","accept","type","disabled","Component","Boolean","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.83ae8ec0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./instagram-logo-black.png\";\nimport \"./App.css\";\nimport {\n  Form,\n  Button,\n  Comment,\n  Header,\n  Label,\n  Icon,\n  Menu\n} from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport abbreviate from \"number-abbreviate\";\n\nlet avatars = [\n  \"Ade\",\n  \"Christian\",\n  \"Daniel\",\n  \"Elliot\",\n  \"Helen\",\n  \"Jenny\",\n  \"Joe\",\n  \"Justen\",\n  \"Laura\",\n  \"Matt\",\n  \"Nan\",\n  \"Steve\",\n  \"Stevie\",\n  \"Tom\",\n  \"Veronika\",\n  \"Zoe\"\n];\n\nconst title = (\n  <h1\n    style={{ marginTop: \"10px\", cursor: \"pointer\" }}\n    onClick={() => {\n      window.location = window.location;\n    }}\n  >\n    Insta\n    <img alt=\"\" src={logo} style={{ width: \"0.75em\" }} />\n    Feedback\n  </h1>\n);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      mainImage: logo\n    };\n  }\n  usernameChanged = async () => {\n    this.setState({ isLoading: true });\n\n    const username = document.getElementById(\"input-username\").value;\n\n    const resp = await fetch(`https://www.instagram.com/${username}/`);\n\n    if (!resp.ok || username.trim() === \"\") {\n      this.setState({\n        isLoading: false,\n        mainImage: logo,\n        usernameError: true\n      });\n      return;\n    }\n\n    const pageHtml = await resp.text();\n\n    const imagesRegexMatch = pageHtml.match(/\"https:\\/\\/.+?\\.jpg\\?.+?\"/g);\n\n    const recheckUsername = document.getElementById(\"input-username\").value;\n    if (username !== recheckUsername) {\n      return;\n    }\n\n    this.setState({ username });\n\n    if (Array.isArray(imagesRegexMatch) && imagesRegexMatch.length > 0) {\n      const profilePicString = imagesRegexMatch[0];\n      const profilePic = profilePicString.slice(1, profilePicString.length - 1);\n\n      this.setState({\n        mainImage: profilePic,\n        usernameError: false\n      });\n    }\n  };\n\n  readFile = () => {\n    const file = document.getElementById(\"file-upload\").files[0];\n\n    if (!file) {\n      return;\n    }\n\n    const reader = new FileReader();\n\n    reader.addEventListener(\n      \"load\",\n      () => {\n        this.setState({ uploadedImageB64: reader.result });\n      },\n      false\n    );\n\n    reader.readAsDataURL(file);\n  };\n\n  submit = async () => {\n    this.setState({ loadingAPI: true });\n\n    const resp = await fetch(\n      \"https://eu-gb.functions.cloud.ibm.com/api/v1/web/shmueljacobs%40gmail.com_dev/default/GuessData.json\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          fileBase64: this.state.uploadedImageB64\n            .split(\",\")\n            .slice(1)\n            .join(\",\"),\n          user: this.state.username\n        })\n      }\n    );\n\n    if (!resp.ok) {\n      this.setState({ loadingAPI: false });\n      return;\n    }\n\n    const respJson = await resp.json();\n\n    this.setState({\n      comments: respJson.comments,\n      likes: respJson.likes,\n      tags: respJson.tags\n    });\n  };\n\n  render() {\n    let body;\n\n    if (\n      Array.isArray(this.state.comments) &&\n      Number.isInteger(this.state.likes)\n    ) {\n      avatars = avatars.sort(() => 0.5 - Math.random());\n\n      const tags = this.state.tags\n        .slice(0, 2)\n        .concat(\"maple story\")\n        .map(t => {\n          t = t.replace(/ /g, \"_\");\n          return (\n            <a\n              href={`https://www.instagram.com/explore/tags/${t}/`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {\" \"}\n              #{t}{\" \"}\n            </a>\n          );\n        });\n\n      body = (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            {title}\n            <img\n              src={this.state.uploadedImageB64}\n              alt=\"logo\"\n              style={{\n                marginTop: \"10px\",\n                maxHeight: \"600px\",\n                maxWidth: `${window.innerWidth - 10}px`\n              }}\n            />\n            <h1>Social Projections:</h1>\n            <span style={{ marginBottom: \"10px\" }}>{tags}</span>\n            <Comment.Group style={{ textAlign: \"initial\" }}>\n              <Header as=\"h3\">\n                <Menu compact>\n                  <Menu.Item>\n                    <Icon name=\"comments\" /> Comments\n                    <Label color=\"teal\" floating>\n                      3\n                    </Label>\n                  </Menu.Item>\n                  <Menu.Item>\n                    <Icon name=\"heart\" /> Likes\n                    <Label color=\"red\" floating>\n                      {abbreviate(this.state.likes, 1)}\n                    </Label>\n                  </Menu.Item>\n                </Menu>\n              </Header>\n\n              <Comment>\n                <Comment.Avatar\n                  src={`https://react.semantic-ui.com/images/avatar/small/${avatars[0].toLowerCase()}.jpg`}\n                />\n                <Comment.Content>\n                  <Comment.Author as=\"a\">{avatars[0]}</Comment.Author>\n                  <Comment.Metadata style={{ color: \"lightgrey\" }}>\n                    <div>Today at 5:42PM</div>\n                  </Comment.Metadata>\n                  <Comment.Text>{this.state.comments[0]}</Comment.Text>\n                </Comment.Content>\n              </Comment>\n\n              <Comment>\n                <Comment.Avatar\n                  src={`https://react.semantic-ui.com/images/avatar/small/${avatars[1].toLowerCase()}.jpg`}\n                />\n                <Comment.Content>\n                  <Comment.Author as=\"a\">{avatars[1]}</Comment.Author>\n                  <Comment.Metadata style={{ color: \"lightgrey\" }}>\n                    <div>Yesterday at 12:30AM</div>\n                  </Comment.Metadata>\n                  <Comment.Text>{this.state.comments[1]}</Comment.Text>\n                </Comment.Content>\n              </Comment>\n\n              <Comment>\n                <Comment.Avatar\n                  src={`https://react.semantic-ui.com/images/avatar/small/${avatars[2].toLowerCase()}.jpg`}\n                />\n                <Comment.Content>\n                  <Comment.Author as=\"a\">{avatars[2]}</Comment.Author>\n                  <Comment.Metadata style={{ color: \"lightgrey\" }}>\n                    <div>5 days ago</div>\n                  </Comment.Metadata>\n                  <Comment.Text>{this.state.comments[2]}</Comment.Text>\n                </Comment.Content>\n              </Comment>\n            </Comment.Group>\n          </header>\n        </div>\n      );\n    } else {\n      let img;\n      if (this.state.mainImage === logo) {\n        img = (\n          <img\n            src={this.state.mainImage}\n            alt=\"logo\"\n            style={{\n              marginTop: \"10px\",\n              width: \"155px\",\n              height: \"155px\"\n            }}\n          />\n        );\n      } else {\n        img = (\n          <a\n            href={`https://www.instagram.com/${this.state.username}/`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <img\n              src={this.state.mainImage}\n              alt=\"logo\"\n              style={{\n                marginTop: \"10px\",\n                width: \"155px\",\n                height: \"155px\",\n                borderRadius: \"50%\"\n              }}\n              onLoad={() => this.setState({ isLoading: false })}\n            />\n          </a>\n        );\n      }\n\n      body = (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            {img}\n            {title}\n            <Form autoComplete=\"off\">\n              <Form.Input\n                error={this.state.usernameError}\n                style={{ width: \"300px\" }}\n                id=\"input-username\"\n                loading={this.state.isLoading}\n                placeholder=\"Username\"\n                onChange={this.usernameChanged}\n              />\n\n              <Label as=\"label\" basic htmlFor=\"file-upload\">\n                <Button\n                  icon=\"upload\"\n                  label={{\n                    basic: true,\n                    content: \"Photo\"\n                  }}\n                  labelPosition=\"right\"\n                />\n                <input\n                  hidden\n                  id=\"file-upload\"\n                  accept=\"image/*\"\n                  type=\"file\"\n                  onChange={this.readFile}\n                />\n              </Label>\n              <br />\n              <Button\n                loading={this.state.loadingAPI}\n                onClick={this.submit}\n                style={{ marginTop: \"10px\" }}\n                disabled={\n                  !this.state.uploadedImageB64 ||\n                  !this.state.username ||\n                  this.state.usernameError\n                }\n                color=\"blue\"\n              >\n                Submit\n              </Button>\n            </Form>\n          </header>\n        </div>\n      );\n    }\n    return body;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/instagram-logo-black.7ea7582b.png\";"],"sourceRoot":""}